image: docker:stable

variables:
  # https://about.gitlab.com/blog/2019/07/31/docker-in-docker-with-docker-19-dot-03/
  DOCKER_DRIVER: overlay2
  # Create the certificates inside this directory for both the server
  # and client. The certificates used by the client will be created in
  # /certs/client so we only need to share this directory with the
  # volume mount in `config.toml`.
  DOCKER_TLS_CERTDIR: "/certs"

services:
  - docker:dind

stages:
  - build
  - push

before_script:
  - docker info
  - export ANSIBLE_VERSION="$(grep ansible_version= Dockerfile | awk -F'=' '{print $2}')"

build:
  stage: build
  script:
    # https://docs.gitlab.com/ee/ci/variables/predefined_variables.html
    - docker build -t $CI_COMMIT_SHORT_SHA:$CI_COMMIT_SHA -t $CI_COMMIT_SHORT_SHA:$ANSIBLE_VERSION .
    - docker images
    - docker run --rm $CI_COMMIT_SHORT_SHA:$CI_COMMIT_SHA ansible --version
    - docker run --rm $CI_COMMIT_SHORT_SHA:$CI_COMMIT_SHA molecule --version

push_to_dockerhub:
 stage: push
 only:
   - master
 script:
   - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USER" --password-stdin
   - docker build -t $DOCKERHUB_USER/$DOCKERHUB_PROJECT:latest -t $DOCKERHUB_USER/$DOCKERHUB_PROJECT:$CI_COMMIT_SHA -t $DOCKERHUB_USER/$DOCKERHUB_PROJECT:$ANSIBLE_VERSION -t $CI_REGISTRY_IMAGE:latest -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA -t $CI_REGISTRY_IMAGE:$ANSIBLE_VERSION .
   - docker images
   - docker run --rm $DOCKERHUB_USER/$DOCKERHUB_PROJECT:latest ansible --version
   - docker run --rm $DOCKERHUB_USER/$DOCKERHUB_PROJECT:latest molecule --version
   - docker push $DOCKERHUB_USER/$DOCKERHUB_PROJECT:latest
   - docker push $DOCKERHUB_USER/$DOCKERHUB_PROJECT:$CI_COMMIT_SHA
   - docker push $DOCKERHUB_USER/$DOCKERHUB_PROJECT:$ANSIBLE_VERSION
   - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
   - docker push $CI_REGISTRY_IMAGE:latest
   - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
   - docker push $CI_REGISTRY_IMAGE:$ANSIBLE_VERSION
